'use strict';
//import {detectCats} from "kittydar.js";
module.exports = toAsync;
const GeneratorFunction = new Function('return (function *(){}).constructor')()
const AsyncFunction = new Function("try{return new Function('return (async function(){}).constructor')()}catch(e){}")()||iteratorToPromise

function toAsync(fn){
    return fn instanceof AsyncFunction? fn: fn && function(...args){//GeneratorFunction &&  Function
        try{
            var result = fn.apply(this,args);
        }catch(e){
            return Promise.reject(e)
        }
        if(fn instanceof GeneratorFunction){
            return iteratorToPromise(result)
        }else{
            return result instanceof Promise?result:Promise.resolve(result)
        }
    }
}
function iteratorToPromise(result){
    return new Promise(function(resolve,reject){
        onThen();
        function onError(e){
            try{
                onNext(result.throw(e));
            }catch(e){
                return reject(e)
            }
        }
        function onThen(value){
            try{
                onNext(result.next(value))
            }catch(e){
                return reject(e)
            }
        }
        function onNext(it){
            while(!it.done){
                let value = it.value;
                if(value instanceof Promise){
                    return value.then(onThen,onError);
                }else{
                    it = result.next(value);
                }
            }
            resolve(it.value);
        }
    })
}

