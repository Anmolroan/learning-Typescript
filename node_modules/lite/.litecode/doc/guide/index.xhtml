[["/doc/guide/index.xhtml","/doc/guide/layout.xhtml","/doc/guide/layout-main.xhtml","/doc/guide/layout-guestbook.xhtml","/doc/guide/layout-menu.xhtml","/doc/guide/layout-dialog.xhtml","/"],["<!DOCTYPE html>\n<html>\n<head>\n<title>入门指南 </title>\n<meta http-equiv='content-type' content='text/html; charset=utf-8'/>\n<link href='default.css' rel='stylesheet' type='text/css'/>\n\n\n</head>\n<body>\n<style>\n.cm-lite-el{ color:#d30;}\r\n\t\t\t.cm-lite-tag{\r\n\t\t\tcolor:#9933FF;font-weight:bold;}\n</style>\n<script src='http://www.xidea.org/lite/codemirror/o.js'><\/script>\n<script src='editor.js'><\/script>\n<div id='main'>\n<div id='header'>\n<div class='logo'\nonclick='location = &#39;http://www.xidea.org/lite/&#39;'>\n",[5,["\n<div style='left:",[3,[96,[-2,"item"],[-1,0]],null],"px;top:",[3,[96,[-2,"item"],[-1,1]],null],"px;width:",[3,[96,[-2,"item"],[-1,2]],null],"px;height:",[3,[96,[-2,"item"],[-1,3]],null],"px;'> </div>\n"],[64,[64,[64,[64,[64,[64,[64,[-3],[64,[64,[64,[64,[-3],[-1,0]],[-1,0]],[-1,19]],[-1,100]]],[64,[64,[64,[64,[-3],[-1,0]],[-1,81]],[-1,42]],[-1,19]]],[64,[64,[64,[64,[-3],[-1,23]],[-1,0]],[-1,19]],[-1,19]]],[64,[64,[64,[64,[-3],[-1,23]],[-1,23]],[-1,19]],[-1,54]]],[64,[64,[64,[64,[-3],[-1,46]],[-1,0]],[-1,42]],[-1,19]]],[64,[64,[64,[64,[-3],[-1,46]],[-1,23]],[-1,19]],[-1,77]]],[64,[64,[64,[64,[-3],[-1,69]],[-1,81]],[-1,19]],[-1,19]]],"item"],"\n</div>\n<h1>\n入门指南 \n</h1>\n<div class='top-box'>\n<div id='i18n'>\n<span class='i18n_zh'\nonclick='i18n_reload(\"zh\")'>中文</span>|\n<span class='i18n_en'\nonclick='i18n_reload(\"en\")'>English</span>\n<div style='display:none'>\n|<input type='checkbox' id='i18n_on' checked='checked'/>\n<label for='i18n_on' title='右键点击内容片段在弹出框输入翻译'>翻译</label>\n</div>\n<script>/*<![CDATA[*/\n\nvar cookie = ''+document.cookie;\nvar i18n_lang = cookie.replace(/^.*\\bi18n_lang=([\\w]+).*$/,'$1');\nif(i18n_lang == cookie){i18n_lang = 'cn'}\nfunction i18n_reload(i18n_lang){\ndocument.cookie = 'i18n_lang='+i18n_lang;\nlocation.reload();\n}\ndocument.getElementById('i18n').className ='i18n_'+ i18n_lang;\nvar i18n_on = document.getElementById('i18n_on')\ndocument.body.oncontextmenu=function(event){\nif(i18n_on.checked ||true){\nvar event = event || window.event;\nvar src = event.target || event.srcElement;\nvar id = src.getAttribute('data-i18n-key');\nif(id){\nvar oldvalue = src.innerHTML;\nvar value = prompt('更正翻译('+i18n_lang+')：',oldvalue);\nif(value && value != oldvalue){\nvar data = 'i18n_action=save&i18n_id='+encodeURIComponent(id)+'&i18n_value='+encodeURIComponent(value);\npostData(location.href,data,function(){\nsrc.innerHTML = value;\n});\n}\nreturn false;\n}\t\n}\n}\n\n//]]><\/script>\n</div>\n<div class='test'><a href='../test.xhtml' class=' missed'>查看测试报表</a></div>\n</div>\n<div class='line'></div>\n</div>\n<div id='content'>\n\n<a name='what'></a>\n<h3>什么是模板?</h3>\n<p>\n数据+\n<strong>模板</strong>\n=> 视图，这就是模板的价值和定位。\n</p>\n<p>\n在Web开发中，前端工程师通常使用模板，将后端数据转化/拼装为一个前端可读的HTML内容\r\n\t\t\t[\n<a\nonclick='showNext(this,this.parentNode,\"展开示例\",\"隐藏示例\");return false' href='#'>展开示例</a>\n]。\n</p>\n<div style='display:none'>\n<ul>\n<h4>最简模板示例</h4>\n<p>\n以显示一个简单的个人信息为例，形式如：\n<script>//<![CDATA[\n__id__1492191769857_8=[\"<html>\\n<title>模板测试</title>\\n<body>\\n我是：张三,来自：北京\\n</body>\\n</html>\",null];\n//]]>\n<\/script>\n<div class='code'><script>renderSource(__id__1492191769857_8[0],__id__1492191769857_8[1],'');<\/script></div>\n</p>\n<p>\n其中，姓名 \"张三\" 和城市 \"北京\" 需要从后端获取，后端数据模型如下：\n<script>//<![CDATA[\n__id__1492191769864_85=[\"{\\n\\\"name\\\": \\\"张三\\\",\\n\\\"city\\\":\\\"北京\\\"\\n}\",null];\n//]]>\n<\/script>\n<script>testModel=__id__1492191769864_85[0];\n<\/script>\n<div class='code'><script>renderSource(__id__1492191769864_85[0],__id__1492191769864_85[1],'/testmodel.json');<\/script></div>\n</p>\n<p>\n为了实现上述内容的动态展示，我们需要编写一个简单的模板：\n<script>var testModel = editorMap['/testmodel.json'].getValue();\n<\/script>\n<script>//<![CDATA[\n__id__1492191769868_9=[\"<html>\\n\\t<title>模板测试</title>\\n\\t<body>\\n\\t\\t我是：${name},来自：${city}\\n\\t</body>\\n</html>\",testModel];\n//]]>\n<\/script>\n<div class='code'><script>renderSource(__id__1492191769868_9[0],__id__1492191769868_9[1],'');<\/script></div>\n</p>\n</ul>\n</div>\n<a name='style'></a>\n<h3>Lite 模板快速参考 </h3>\n<p>Lite 模板的主要功能包括：\n<ul>\n<li><a href='feature-weboptimize.xhtml' class=' missed'>自动渲染性能优化</a></li>\n<li><a href='syntax-out.xhtml' class=' missed'>变量/表达式输出</a></li>\n<li><a href='syntax-if.xhtml' class=' missed'>条件</a>/<a href='syntax-for.xhtml' class=' missed'>循环控制</a></li>\n<li><a href='syntax-def.xhtml' class=' missed'>函数</a>/<a href='syntax-var.xhtml' class=' missed'>变量申明</a></li>\n<li><a href='syntax-extends.xhtml' class=' missed'>模板继承</a>/<a href='syntax-include.xhtml' class=' missed'>静态包含</a></li>\n<li><strong>前端功能</strong>（如：\n<a href='syntax-client.xhtml' class=' missed'>前端模板</a>/\n<a href='syntax-autoform.xhtml' class=' missed'>自动表单</a>/\n<a href='feature-autoencode.xhtml' class=' missed'>HTML自动编码</a>）</li>\n</ul>\n</p>\n<h3>Lite 模板风格 </h3>\n<p>在Lite出现之前，已经有很多广泛运用的模板系统，Java中，Velocity，FreeMarker 算是先驱，\r\n\t\t\tPHP中Smarty出现较早， 前端JavaScript模板， 太杂，成熟的不多，这里就不多说。</p>\n<p>那么Lite存在的价值又在那里呢？</p>\n<p> 与这些流行的模板系统不同， Lite有如下三大特点：</p>\n<ul>\n<li>\n<strong>自动网络优化</strong>\n<p>结合Promise 结构， 请求到达候第一时间输出静态内容，遇到未就绪的动态内容候自动等待。</p>\n<p>遇到lazy-module 候，自动将其放到Bigpiple等候队列，先无阻塞输出其他更高优先级内容。</p>\n</li>\n<li>\n<strong>懂HTML/XML的语法,绝对安全</strong>\n<p>在Lite环境下，你基本无法打破html自身约束，写不出有XSS漏洞的网页。</p>\n<p>他可以据所在位置html语义自动优化，还可以在标记语法的基础上设计一些漂亮的语法特征。</p>\n<ul>\n<li>\n通过HTML/XML上下文实现的：\n<a href='feature-autoencode.xhtml' class=' missed'>自动编码</a>\n</li>\n<li>\n通过HTML/XML属性语义实现的：\n<a href='feature-xml.xhtml#attribute' class=' missed'>条件属性</a>\n</li>\n<li>\n通过HTML/XML块结构和空格语义要求实现的：\n<a href='syntax-trim.xhtml' class=' missed'>标签空格控制</a>\n</li>\n<li>\n通过过滤原生表单元素实现的：\n<a href='syntax-autoform.xhtml' class=' missed'>自动表单填充</a>\n</li>\n<li>\n通过过滤原生HTML/XML标签实现的：\n<a href='feature-xml.xhtml#' class=' missed'>自动HTML标签补全</a>\n</li>\n</ul>\n</li>\n<li>\n<strong>基于 JavaScript</strong>\n<p>\n兼容JavaScript的表达式和函数库，方便前端工程师学习。\n<script>//<![CDATA[\n__id__1492191769925_95=[\"{\\n\\t\\\"object\\\":{\\\"key\\\":\\\"value\\\"},\\n\\t\\\"a\\\":1,\\\"b\\\":2,\\\"c\\\":3,\\\"d\\\":4,\\\"e\\\":5,\\\"f\\\":6,\\n\\t\\\"array\\\":[1,2,3,4],\\n\\t\\\"str\\\":\\\"testString\\\"\\n}\",null];\n//]]>\n<\/script>\n<script>//<![CDATA[\nelModel=__id__1492191769925_95[0];\n//]]>\n<\/script>\n\n<script>//<![CDATA[\n__id__1492191769926_13=[\"<textarea>\\n//表达式示例:\\n${JSON.stringify(object)}\\n${[a,b,c].concat(d,[e,f]).join(',')}\\n${[a,b,c,d].concat(array).length}\\n${str.charAt(0)}\\n${str.substring(1,2)}\\n</textarea>\",elModel];\n//]]>\n<\/script>\n<div class='code'><script>renderSource(__id__1492191769926_13[0],__id__1492191769926_13[1],'');<\/script></div>\n</p>\n<p>\n基于JavaScript的扩展机制，可以轻松扩展模板语法，方便前端工程师二次开发。\n</p>\n<p>\n<i>\n关于扩展的话题，本指南有一些简单介绍：\n<a href='syntax-extension.xhtml' class=' missed'>syntax-extension.xhtml</a>\n</i>\n</p>\n</li>\n\n<li>\n<strong>功能完备，前后端统一，跨平台的实现</strong>\n<p>Lite\r\n\t\t\t\t\t目前拥有功能强大且成熟的Node，PHP，Java版本，支持目前主流和一些超前的模板编程方法，并且在前端JavaScript模板上，完全拥有与后端模板同样完备的功能。你可以在NodeJS，PHP，Java，乃至浏览器JavaScript中随意切换。\n</p>\n<p>而且，因为他中间代码的设计方法，非常方便迁移到其他平台。</p>\n</li>\n</ul>\n\n<div id='post'>\n\n<div class='ds-thread'></div>\n<script type='text/javascript'>\nvar duoshuoQuery = {short_name:\"lite\"};\n(function() {\nvar ds = document.createElement('script');\nds.type = 'text/javascript';ds.async = true;\nds.src = 'http://static.duoshuo.com/embed.js';\nds.charset = 'UTF-8';\n(document.getElementsByTagName('head')[0] \n|| document.getElementsByTagName('body')[0]).appendChild(ds);\n})();\n<\/script>\n\n</div>\n</div>\n<div id='footer'></div>\n</div>\n<div id='menu'>\n<div class='menuInner'>\n<h3>入门</h3>\n<ul>\n<li>\n<a href='index.xhtml'>Lite模板简介</a>\n</li>\n<li>\n<a href='install.xhtml'>测试与安装</a>\n</li>\n</ul>\n<h3>表达式参考</h3>\n<ul>\n<li>\n<a href='el.xhtml'>什么是表达式</a>\n</li>\n<li>\n<a href='el-value.xhtml'>变量/原子值/复合值</a>\n</li>\n<li>\n<a href='el-op.xhtml'>操作符与函数</a>\n</li>\n<li>\n<a href='el-function.xhtml'>内置函数参考</a>\n</li>\n</ul>\n<h3>核心模板语法参考</h3>\n<ul>\n\n<li>\n<a href='syntax-out.xhtml'>输出语法[${},$!{},$#{},日期]</a>\n</li>\n<li>\n<a href='syntax-if.xhtml'>条件判断[c:if]</a>\n</li>\n<li>\n<a href='syntax-choose.xhtml'>分支选择[c:choose]</a>\n</li>\n<li>\n<a href='syntax-for.xhtml'>四种循环[c:for]</a>\n</li>\n<li>\n<a href='syntax-extends.xhtml'>模板继承[c:extends]</a>\n</li>\n<li>\n<a href='syntax-include.xhtml'>静态包含[c:include]</a>\n</li>\n<li>\n<a href='syntax-var.xhtml'>变量申明[c:var]</a>\n</li>\n<li>\n<a href='syntax-def.xhtml'>模板函数申明[c:def]</a>\n</li>\n<li>\n<a href='syntax-extension.xhtml'>自定义扩展[c:extension]</a>\n</li>\n</ul>\n<h3>XML/HTML相关语法参考</h3>\n<ul>\n<li>\n<a href='syntax-trim.xhtml'>注释/语法空格控制[h:trim]</a>\n</li>\n<li>\n<a href='syntax-client.xhtml'>前端模板函数申明[h:client]</a>\n</li>\n<li>\n<a href='syntax-autoform.xhtml'>自动表单[h:autofrom]</a>\n</li>\n<li>\n<a href='feature-autoencode.xhtml'>自动编码</a>\n</li>\n<li>\n<a href='feature-xml.xhtml' title='标记语言特有的语法，如：条件属性,自动编码,自动语义补全等...'>其他特性</a>\n</li>\n</ul>\n<h3>开发调试辅助</h3>\n<ul>\n<li>\n<a href='debug-model.xhtml'>查看数据模型</a>\n</li>\n<li>\n<a href='debug-log.xhtml'>查看编译日志</a>\n</li>\n</ul>\n<h3>编译打包</h3>\n<ul>\n<li>\n<a href='compiler-cmd.xhtml'>批量编译</a>\n</li>\n<li>\n<a href='compiler-spec.xhtml'>编译规范</a>\n</li>\n<li>\n<a href='compiler-api.xhtml'>自定义编译</a>\n</li>\n</ul>\n<h3>常见问题</h3>\n<ul>\n<li>\n<a href='faq-newer.xhtml'>致初学者</a>\n</li>\n<li>\n<a href='faq-badcase.xhtml'>常犯错误</a>\n</li>\n<li>\n<a href='https://github.com/jindw/lite/issues#faq-plan.xhtml'>开发计划</a>\n</li>\n</ul>\n<h3>二次开发参考</h3>\n<ul>\n<li>\n<a href='dev-function.xhtml'>扩展运行时函数(PHP)</a>\n</li>\n<li>\n<a href='dev-function.xhtml'>扩展运行时函数(Java)</a>\n</li>\n<li>\n<a href='dev-extension.xhtml'>扩展模板语法</a>\n</li>\n<li>\n<a href='dev-data-view.xhtml'>扩展数据模型调试窗口</a>\n</li>\n<li>\n<a href='dev-translator.xhtml'>创建新的运行环境</a>\n</li>\n</ul>\n</div>\n</div>\n<div class='dialog'>\n<div class='mask'></div>\n<div id='exampleRunner'>\n<div class='head'>\n===模板测试 ===\n<a class='close'\nonclick='closeExample()'>X</a>\n</div>\n<div class='jsonSource'>\n<h5>数据模型</h5>\n<script>\nvar jsonEditor = CodeMirror(placeMirror, {\nvalue: '',\nlineNumbers: true,\nmode: {name:\"javascript\",json:true}\n});\n<\/script>\n</div>\n<div class='templateSource'>\n<h5>模板代码</h5>\n<script>\nvar templateEditor = CodeMirror(placeMirror, {\nvalue: '',\nlineNumbers: true,\nmode: {name:\"litexml\"}\n});\n\n<\/script>\n</div>\n<div class='resultSource' id='exampleResult'>\n<h5>结果输出</h5>\n<div id='resultLoader'></div>\n<div id='resultSource'>\n<script src='c.js'><\/script>\n</div>\n</div>\n<div class='toolbar'>\n<input type='button' value='编译(JavaScript)'\nonclick='compileToJS()'/>\n<input type='button' value='编译(NodeJS)'\nonclick='compileToNodeJS()'/>\n<input type='button' value='编译(PHP)'\nonclick='compileToPHP()'/>\n<input type='button' title='lite' value='编译(Java)'\nonclick='compileToLite()'/>\n<input type='button' id='runButton' disabled='disabled' value='运行(?)'\nonclick='runTemplate()'/>\n</div>\n</div>\n</div>\n<script>/*<![CDATA[*/\nvar menu = document.getElementById('menu');\nvar menuContent = menu.firstChild;\nmenuContent = menuContent.nodeType==1 ?menuContent:menuContent.nextSibling;\nvar as = document.body.getElementsByTagName('a');\nvar height = menu.scrollHeight;\nfor(var i = as.length;i--;){\nvar a = as.item(i);\nif(/\\bcurrent\\b/.test(a.className)){\nvar t= a.offsetTop;\nvar bt = height - t;\n\nif(bt<120){\nmenuContent.scrollTop = -bt+Math.min(150,height/3)+15\n}\n\n} \n}\n//]]><\/script>\n</body>\n</html>"],{"encoding":"utf-8","contentType":"text/html;charset=utf-8","layout":"/doc/guide/layout.xhtml"}]