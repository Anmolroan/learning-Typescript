<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://www.xidea.org/lite/core"
	xmlns:h="http://www.xidea.org/lite/html-ext"
	>
	<head>
		<c:include path="$page" xpath="//xhtml:head/*" />
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<link href="default.css" rel="stylesheet" type="text/css" />
		<c:extension namespace="http://www.w3.org/1999/xhtml">
			//<![CDATA[
	var PATH_KEY = "http://www.xidea.org/lite/doc/guide/layout.xhtml#currentPathh";
    function parseA(node){//连接简写，没有文本的时候，直接使用href作为文本节点
    	var href = node.getAttribute('href');
    	if(href && node.firstChild == null){
    		node.appendChild(node.ownerDocument.createTextNode(href));
    	}
    	if(/\.xhtml/.test(href)){
    		var uri = this.createURI(href);
    		var root = this.config && this.config.root;
    		var styleClass = node.getAttribute('class')||'';
    		try{
    			var path = this.getAttribute(PATH_KEY);
    			if(!path){
    				var paths = this.getResources();
    				for(var i =0;i<paths.length;i++){
    					var path = paths[i];
    					if(/\.xhtml$/.test(path+'')){
    						break;
    					}
    				}
    				this.setAttribute(PATH_KEY,path);
    			}
    			//$log.error(path+'',uri+'');
    			if((path+'').replace(/#.*|([\/])+/g,'$1') === (uri+'').replace(/#.*|([\/])+/g,'$1')){
    				styleClass += ' current'
    			}else{
    				var file = root && !/^https?\:\/\//.test(root) && window.java && new java.io.File(new java.io.File(root),uri.path);
    				//$log.error((path+'').replace(/#.*|([\/])+/g,'$1'),(uri+'').replace(/#.*|([\/])+/g,'$1'));
    				if(root && uri.scheme == 'lite' && file && !file.exists()){
    					styleClass += ' missed';
    				}
    			}
    		}finally{
    			if(styleClass){
	    			node.setAttribute('class',styleClass);
	    		}
	    	}
    	}
    	this.next(node);
    }
    //]]>
		</c:extension>
		<c:extension namespace="http://www.xidea.org/lite/example">
			//<![CDATA[
var style = 'border: 1px solid #DFECF1;'
    			+'font-family:"Courier New",monospace;'
    			+'padding:4px;margin:4px;'
    			+'font-size:12px;overflow:auto;'
    			+'background-color:#EEE;border:1px solid #222;';
function parseCode(node){
    //代码高亮组件
    var ts = [];
    var text = String(node.textContent || node.text);
    text = text.replace(/^\s*[\r\n]+|[\r\n]+\s*$/g,'');
    text = text.split(/\r\n?|\n/);
    var len = text.length;
    text = text.join('\n');
    while(true){
    	var text2 = text.replace(/^[\t ]/mg,'');
    	if(text.length - text2.length != len){
    		break;
    	}
    	text = text2;
    }
	
	var varName = node.getAttribute("var");
	var alias = node.getAttribute("alias");
	var path = node.getAttribute("path");
	var model = node.getAttribute("model");//有模型就可以执行

	text = JSON.stringify(text).replace(/(\]\]|script)>/g,'$1\\>');
	if(model){
		if(/^\s*\{/.test(model)){
			model = JSON.stringify(model).replace(/(\]\]|script)>/g,'$1\\>');
		}
	}else{
		model=null;
	}
	var guid = '__id__'+new Date().getTime()+'_'+(Math.random()*100 | 0);
	this.appendText("<script>//<![CDATA[\n" + guid+'=[' +text+','+model+"];\n//]"+"]>\n<\/script>\n")
	if(varName){
		this.appendText("<script>//<![CDATA[\n" + varName+'=' +guid+"[0];\n//]"+"]>\n<\/script>\n")
		if(model){
			this.appendText("<span class='runner' onclick='showExample("+guid+"[0],"+varName+")'>执行</span>");
		}
	}else{
		if(alias){
			this.appendText("<script>" + alias+'=' +guid+"[0];\n<\/script>\n")
		}
		this.appendText("<div class='code'><script>renderSource("+guid+"[0],"+guid+"[1],'"+path+"');<\/script></div>")
	}
};
function parseNL2BR(node){
	var text = String(node.textContent || node.text);
	var varId = this.allocateId();
	//生成内容
	this.appendCapture(varId)
	//以不编码的方式捕捉内容
	var list = this.parseText(text,0);
	this.appendAll(list);
	this.appendEnd();
	
	//将生成内容按行劈成数组，循环安全输出
	var forId = this.allocateId();
	this.appendFor(forId,varId+".split('\\n')",null);
	this.appendXT(forId);
	this.appendText("<br/>");
	this.appendEnd();
}
//]]>
		</c:extension>
	</head>
	<body>
		
		<style>
			.cm-lite-el{ color:#d30;}
			.cm-lite-tag{
			color:#9933FF;font-weight:bold;}
		</style>
		<script src="http://www.xidea.org/lite/codemirror/o.js" />
		<script src='editor.js'></script>
		<c:include path="layout-main.xhtml" />
		<c:include path="layout-menu.xhtml" />
		<c:include path="layout-dialog.xhtml" />
		
		<script>
			var menu = document.getElementById('menu');
			var menuContent = menu.firstChild;
			menuContent = menuContent.nodeType==1 ?menuContent:menuContent.nextSibling;
			var as = document.body.getElementsByTagName('a');
			var height = menu.scrollHeight;
			for(var i = as.length;i--;){
				var a = as.item(i);
				if(/\bcurrent\b/.test(a.className)){
					var t= a.offsetTop;
					var bt = height - t;
					//alert([height,t,bt])
					if(bt<120){
						menuContent.scrollTop = -bt+Math.min(150,height/3)+15
					}
					//a.parentNode.scrollIntoView();
				} 
			}
		</script>
	</body>
</html>
